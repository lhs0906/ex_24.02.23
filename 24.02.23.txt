< HTML 입력양식(form)>
: 사용자로부터 데이터를 받아 서버로 넘기는 데 사용하며, 입력 양식에 채워진 데이터들은 서버로 전달된다.

<입력양식의 작동방식>
 1. 입력양식에 데이터를 채워 서버로 보낸다.
 2. 서버는 입력양식을 받아서 JSP와 같은 서버 스크립트로 보낸다.
 3. JSP는 입력 데이터를 처리하여 새로운 웹페이지를 생성한다.

1. 입력양식 : <form>...</form> 태그로 생성한다.
		 ex) <form action="input.jsp" method="post"> 
				아이디 : <input type="text" name="input">
				비밀번호 : <input type="submit">
		      </form>
  
   1) action 속성 : 사용자가 입력한 데이터를 받아서 처리하는 스크립트의 주소를 URL 형식으로 적어준다.
			ex) action="input.jsp"
  
   2) method 속성 : 데이터를 보내는 방법을 정해준다. POST와 GET 방식이 있다. (차후 공부)
			  ex) method="POST"

2. GET 방식 / POST 방식
  
  1) GET 방식 :  URL 주소줄 ? 뒤에 사용자가 입력한 데이터를 붙여서 (파라미터를 붙여서) 전달하는 방식이다.
		 	- 장점 : 북마크 가능, 뒤로가기 가능
			- 단점 : 보안유지 안됨, 길이 제한이 있음
 
  2) POST 방식 : 사용자가 입력한 데이터를 HTTP Request 헤더 안에 포함시켜서 (숨겨져서) 전송하는 방식이다.
		 	- 장점 : 보안 유지됨, 길이 제한 없음
		 	- 단점 : 북마크 불가능, 뒤로가기 불가능

3. 입력요소 (입력양식에 사용되는 입력요소)
   : 입력요소들이 반드시 서버에서만 사용되는 것은 아님. 
     HTML 문서에 포함된 자바스크립트가 입력을 받아서 작업을 할 때도 사용함.

	- <input>
	- <label> : 입력 요소에 대한 레이블을 정의함.
	- <select> : 드롭다운 리스트를 정의함.
	- <textarea> : 다중 라인 입력 필드이다.
	- <button> : 클릭 가능한 버튼을 생성한다.
	- <fieldset> : 데이터를 그룹핑할 때 사용한다.
	- <datalist> : 미리 정의된 옵션 목록을 지정한다.
	- <option> : 선택될 수 있는 항목을 정의한다.

4. <input>요소의 다양한 type
	- 이메일 : <input type="email" name="email" />
	- URL : <input type="url" name="url" />
	- 전화번호 : <input type="tel" name="tel" />
	- 색상 : <input type="color" name="color" />
	- 월 : <input type="month" name="month" />
	- 날짜 : <input type="date" name="date" />
	- 주 : <input type="week" name="week" />
	- 시간 : <input type="time" name="time" />
	- 지역 시간 : <input type="datetime-local" name="localdatetime" />
	- 숫자 : <input type="number" name="number" min="1" max="10" step="2" />
	- 범위 : <input type="range" name="range" min="1" max="10" step="2" />

5. <input> 요소에서 많이 사용되는 type 속성 값들
	
	- <input type="text"> : 사용자가 입력할 수 있는 한 줄짜리 입력 필드를 정의한다.
					(size 속성으로 필드의 크기를 변경할 수 있다.)
	
	- <input type="passward"> : 패스워드 필드를 정의한다. 비밀번호 입력에 주로 사용한다.
	
	- <textarea> : 여러 줄의 텍스트를 입력받을 때 사용되는 태그이다.
				(영역의 크기는 rows와 cols로 설정한다.)

	
   	- <input type="radio"> : 라디오 버튼을 정의한다. (동그란 모양의 선택항목)
					라디오버튼은 사용자가 여러 항목 중에서 하나만을 선택할 수 있다.
					이때 name과 value도 반드시 함께 지정해야 하는데, 주의할 점은 선택항목들의 name이 모두 같아야 한다.
					name이 같으면 동일한 그룹으로 취급되고, 동일 그룹에서는 하나만 선택할 수 있기 때문이다.
					ex) <input type="radio" name="gender" value="male"> 남성
					     <input type="radio" name="gender" value="female"> 여성

	- <input type="checkbox"> : 체크박스를 정의한다. 체크박스는 사용자가 여러 개의 항목을 동시에 선택할 수 있다. 
					     체크박스 역시, 선택항목들의 name 속성이 모두 동일해야 한다.
					     ex) <input type="checkbox" name="fruits" value="apple"> 사과
						  <input type="checkbox" name="fruits" value="grape"> 포도
					     
					     어떤 항목을 미리 체크해두고 싶다면, checked 속성을 지정하면 된다.
					     ex) <input type="checkbox" name="fruits" value="apple" checked> 사과
						  <input type="checkbox" name="fruits" value="grape"> 포도

	- <input type="submit"> : 제출 버튼을 정의한다. 제출버튼은 데이터를 서버로 전송하는 데 사용된다.
					

	- <input type="reset"> : 초기화 버튼이다. 이 버튼을 누르면 입력 필드에 입력한 값들이 모두 초기화된다.
					일반적으로 입력 양식 안에는 제출 버튼과 초기화 버튼이 있는 것이 바람직하다.

	- <input type="button"> : 일반적인 버튼을 생성한다. 
					  onclick 속성을 사용할 수 있는데, "버튼이 클릭이 되면" 이라는 의미의 속성이다. 
					  간단하게 경고 대화 상자를 화면에 표시하는 alert() 를 함께 실행시킬 수 있다.
					  ex) <input type="button" vlaue="눌러보세요" onclick="alert( '안녕하세요?' )">

	- <button> 요소 : 텍스트나 이미지를 버튼으로 콘텐츠화 하고자 할 때는 <button> 요소를 사용할 수 있다.
				반드시 <button> 요소의 type (sumit, reset, button) 을 지정해 주어야 한다.
				
				버튼을 이미지로 만들고자 할 때는 2가지 방법이 있다.
				ex_1) <button type="button"> <img src="submit.jpg> </button>
				ex_2) <input type="image" src="submit.jpg" alt="버튼"> 

	- <select> 요소 : 메뉴를 표시하고 사용자로 하여금 하나를 선택하게 한다.
			      항상 <option> 요소와 함께 사용해야 한다. <option> 요소는 반드시 value속성을 가지고 있어야 한다.
			      초기에 미리 특정 항목을 선택해 두고 싶다면 selected 속성을 이용하면 된다. 
			      ex)<form action=""> 
				  <select name="cars">
					<option value="bmw"> BMW </option>
					<option value="benz"> BENZ </option>
					<option value="hyundai" selected> 현대자동차 </option>
				  </select>
				  </form>

	- <datalist> 요소 : <select>요소와 마찬가지로 미리 정의된 옵션들의 리스트를 보고 선택항목을 지정할 수 있다. 
				<datalist> 요소는 <input> 요소의 list 속성과 함께 작성된다. 
				ex) <input list="browsers" name="browser">
				     <datalist id="browsers">

				이때 <datalist>의 id 속성 이름은 <input>요소의 list 속성 이름과 일치해야 한다.
				
				<datalist> 요소에서는 사용자의 직접 입력도 가능하다. (<select> 요소는 불가능함.)

	- <fieldset> 요소 : 입력요소들을 그룹핑하는 데 사용된다. 박스모양으로 그룹의 경계선을 그려준다.
				<fieldset> 요소 안에는 다양한 입력 요소들을 넣을 수 있다.
				<legend> 태그를 사용하여 그룹의 제목을 붙일 수 있다.

	- <label> 요소 : <input> 요소를 위한 레이블을 정의한다.
			     <label> 태그의 속성 for 는 <input> 요소의 id 속성과 일치해야 한다.
			     <label> 요소는 레이블이나 input 요소 둘 다 클릭하여 선택할 수 있어 마우스 사용자에게 편리하다.

			     ex) <label for="male"> 남성 </label>
				  <input type="radio" name="gender" id="male" vlaue="male">

	- <input type="file"> : 파일 업로드 버튼을 정의한다. 
				     이 버튼을 누르면 파일을 선택하는 대화상자가 화면에 표시된다. (웹 브라우저마다 약간씩 다르게 구현된다.)
				     
					이때, <form> 태그에는 속성으로 "enctype="multi-part/form-data" 를 추가하는 것이 좋다.
				     	(파일을 올바르게 업로드하게 해준다.)

					<input> 태그의 accept 속성은 업로드시킬 파일의 MINE 타입을 브라우저에게 알려주는 역할을 한다.

					ex) <form enctype="multi-part/form-data">
						<input type="file" accept="image/jpg,image/gif">
					     </form>












